# -*- coding: utf-8 -*-
"""
Created on Mon Mar 30 21:51:20 2015

@author: Leon
"""
import numpy as np
import csv

def Time2AbsTime(listBehaviorTime):
        absTime=np.arange(len(listBehaviorTime))
        for j in range(len(listBehaviorTime)):
            if listBehaviorTime[j]>='2014-11-18 00' and listBehaviorTime[j]<='2014-11-18 23':
                absTime[j]=1
            if listBehaviorTime[j]>='2014-11-19 00' and listBehaviorTime[j]<='2014-11-19 23':
                absTime[j]=2
            if listBehaviorTime[j]>='2014-11-20 00' and listBehaviorTime[j]<='2014-11-20 23':
                absTime[j]=3
            if listBehaviorTime[j]>='2014-11-21 00' and listBehaviorTime[j]<='2014-11-21 23':
                absTime[j]=4  
            if listBehaviorTime[j]>='2014-11-22 00' and listBehaviorTime[j]<='2014-11-22 23':
               absTime[j]=5
            if listBehaviorTime[j]>='2014-11-23 00' and listBehaviorTime[j]<='2014-11-23 23':
                absTime[j]=6
            if listBehaviorTime[j]>='2014-11-24 00' and listBehaviorTime[j]<='2014-11-24 23':
                absTime[j]=7
            if listBehaviorTime[j]>='2014-11-25 00' and listBehaviorTime[j]<='2014-11-25 23':
                absTime[j]=8
            if listBehaviorTime[j]>='2014-11-26 00' and listBehaviorTime[j]<='2014-11-26 23':
                absTime[j]=9
            if listBehaviorTime[j]>='2014-11-27 00' and listBehaviorTime[j]<='2014-11-27 23':
                absTime[j]=10
            if listBehaviorTime[j]>='2014-11-28 00' and listBehaviorTime[j]<='2014-11-28 23':
                absTime[j]=11
            if listBehaviorTime[j]>='2014-11-29 00' and listBehaviorTime[j]<='2014-11-29 23':
                absTime[j]=12
            if listBehaviorTime[j]>='2014-11-30 00' and listBehaviorTime[j]<='2014-11-30 23':
                absTime[j]=13
            if listBehaviorTime[j]>='2014-12-01 00' and listBehaviorTime[j]<='2014-12-01 23':
                absTime[j]=14
            if listBehaviorTime[j]>='2014-12-02 00' and listBehaviorTime[j]<='2014-12-02 23':
                absTime[j]=15
            if listBehaviorTime[j]>='2014-12-03 00' and listBehaviorTime[j]<='2014-12-03 23':
                absTime[j]=16              
            if listBehaviorTime[j]>='2014-12-04 00' and listBehaviorTime[j]<='2014-12-04 23':
                absTime[j]=17
            if listBehaviorTime[j]>='2014-12-05 00' and listBehaviorTime[j]<='2014-12-05 23':
                absTime[j]=18
            if listBehaviorTime[j]>='2014-12-06 00' and listBehaviorTime[j]<='2014-12-06 23':
                absTime[j]=19
            if listBehaviorTime[j]>='2014-12-07 00' and listBehaviorTime[j]<='2014-12-07 23':
                absTime[j]=20
            if listBehaviorTime[j]>='2014-12-08 00' and listBehaviorTime[j]<='2014-12-08 23':
                absTime[j]=21
            if listBehaviorTime[j]>='2014-12-09 00' and listBehaviorTime[j]<='2014-12-09 23':
                absTime[j]=22
            if listBehaviorTime[j]>='2014-12-10 00' and listBehaviorTime[j]<='2014-12-10 23':
                absTime[j]=23
            if listBehaviorTime[j]>='2014-12-11 00' and listBehaviorTime[j]<='2014-12-11 23':
                absTime[j]=24
            if listBehaviorTime[j]>='2014-12-12 00' and listBehaviorTime[j]<='2014-12-12 23':
                absTime[j]=25
            if listBehaviorTime[j]>='2014-12-13 00' and listBehaviorTime[j]<='2014-12-13 23':
                absTime[j]=26
            if listBehaviorTime[j]>='2014-12-14 00' and listBehaviorTime[j]<='2014-12-14 23':
                absTime[j]=27
            if listBehaviorTime[j]>='2014-12-15 00' and listBehaviorTime[j]<='2014-12-15 23':
                absTime[j]=28
            if listBehaviorTime[j]>='2014-12-16 00' and listBehaviorTime[j]<='2014-12-16 23':
                absTime[j]=29
            if listBehaviorTime[j]>='2014-12-17 00' and listBehaviorTime[j]<='2014-12-17 23':
                absTime[j]=30
        return absTime

def countMeanInterval(listUser,listTime,absTime):
    absTime=Time2AbsTime(listTime)
    setA=set(listUser)
    listA=list(setA)
    listB=[]
    for i in range(len(listA)):
            listB.append(0)        
    DictCount=dict(zip(listA,listB))     #Inintial  store every user and his behavior Times
    DictInter=dict(zip(listA,listB))    #inintial  store every user and his inteval sum
    for i in range(len(listUser)):
        for j in range(len(listTime)):
            if listUser[i]==listUser[j]:
                DictCount[listUser[i]]+=1
                DictInter[listUser[i]]+=abs(absTime[i]-absTime[j])
    for i in range(len(DictInter)):
        DictInter[listA[i]]= DictInter[listA[i]]/(DictCount[listA[i]]-1)   #the mean of interval
    return DictInter
 
def dict_to_list(Dict):         #dict 化为list 型
    List= []
    for key, value in Dict.iteritems():
        if (type(value) is dict):
            value = dict_to_list(value)
        List.append([key, value])
    return List


def writerToFile(fileName,List):
    csv.register_dialect('mydialect',delimiter=']' )
    myFile=open(fileName,'wb')  
    myWriter=csv.writer(myFile)    
    myWriter.writerows(List)
                                       

def meanIntervalOfBuy():
        userId=[]; behaviorType=[]; time=[]
        numColumn=len(open("D:\\tianchi_bigdata\\tianchi_mobile_recommend_train_user\\training_user_set.txt",'rb').readline().split('\t'))-1
        fr= open("D:\\tianchi_bigdata\\tianchi_mobile_recommend_train_user\\training_user_set.txt",'rb')     
        for line in fr.readlines():
           
            curLine=line.strip().split('\t')
            userId.append(str(curLine[0]))  
            behaviorType.append(str(curLine[2]))
            time.append(str(curLine[-1]))
     
        buyTime=[];buyUser=[]
        
        for i  in range(len(behaviorType)):
           if behaviorType[i]== '4':
                buyTime.append(time[i])
                buyUser.append(userId[i]) 
                
        absTime=Time2AbsTime(buyTime)  
        DictInter=countMeanInterval(buyUser,buyTime,absTime)
        listInter=dict_to_list(DictInter)
        writerToFile('D:\\tianchi_bigdata\\training_features\\UserOfMeanIntervarlBeforeBuy.csv',listInter)

        
        


meanIntervalOfBuy()
        
                
    
        
