# -*- coding: cp936 -*-
"""
Created on Mon Mar 30 18:59:16 2015

@author: Leon
"""


import csv 
import numpy
def userInteractionLasttime():
        userId=[]; behaviorType=[]; time=[]
        numColumn=len(open("D:\\tianchi_bigdata\\tianchi_mobile_recommend_train_user\\training_user_set.txt",'rb').readline().split('\t'))-1
        fr= open("D:\\tianchi_bigdata\\tianchi_mobile_recommend_train_user\\training_user_set.txt",'rb')     
        for line in fr.readlines():
           
            curLine=line.strip().split('\t')
            userId.append(str(curLine[0]))  
            behaviorType.append(str(curLine[2]))
            time.append(str(curLine[-1]))
      
     
        buyTime=[];buyUser=[]
        cartTime=[];cartUser=[]
        collectTime=[];collectUser=[]
        clickTime=[];clickUser=[]
        for i  in range(len(behaviorType)):
           if behaviorType[i]== '4':
                buyTime.append(time[i])
                buyUser.append(userId[i]) 
           elif behaviorType[i]== '3':
                cartTime.append(time[i])
                cartUser.append(userId[i])
           elif behaviorType[i]== '2':
                collectTime.append(time[i])
                collectUser.append(userId[i])
           else:
                clickTime.append(time[i])
                clickUser.append(userId[i])
                
        print "number of CART",len(cartUser)
        print "number of collect", len(collectUser)
        print "number of collect", len(cartUser)
        print "number of collect", len(clickUser)
        
        DictBuy=KeepPairsWithDictMax(buyUser,buyTime)
        listBuy=dict_to_list(DictBuy)
        writerToFile('D:\\tianchi_bigdata\\training_features\\UserBuyLatest.csv',listBuy)
        
        
        DictCart=KeepPairsWithDictMax(cartUser,cartTime)
        listCart=dict_to_list(DictCart)
        writerToFile('D:\\tianchi_bigdata\\training_features\\UserCartLatest.csv',listCart)
  

        DictCollect=KeepPairsWithDictMax(collectUser,collectTime)
        listCollect=dict_to_list(DictCollect)
        writerToFile('D:\\tianchi_bigdata\\training_features\\UserCollectLatest.csv',listCollect)
        
        DictClick=KeepPairsWithDictMax(clickUser,clickTime)
        listClick=dict_to_list(DictClick)
        writerToFile('D:\\tianchi_bigdata\\training_features\\UserClickLatest.csv',listClick)

        
##def KeepPairsAfterSorted(listA,listB):
##        listANew=[];listBNew=[]
##        listBNew=sorted(listB,reverse=True)
##        for i in range(len(listBNew)):
##                for j in range(len(listB)):
##                        if listBNew[i]==listB[j]:
##                                listANew.append(listA[j])
##        return listANew,listBNew
##
##def twoList2DictUniqueKey(listA,listB):
##    setA=set()
##    Dict=dict(zip(listA,listB))
##    for j in range(len(listB)): 
##            if listA[j] in setA:
##                continue
##            else:
##                setA.add(listA[j])
##                Dict[listA[j]]=listB[j]
##    return Dict

def KeepPairsWithDictMax(listA,listB):    #将listB中 对应于同样的listA的值中的最大值， 作为以listA的集合为key的value值，返回dict。
    setA=set(listA)
    Dict=dict(zip(setA,listB))     #initial
    setAA=set()
    for i in range(len(listA)):
        if listA[i] in setAA:
            if listB[i]>Dict[listA[i]]:
                Dict[listA[i]]=listB[i]
        else:
            setAA.add(listA[i])
            Dict[listA[i]]=listB[i]
    print len(Dict)
    return Dict       

##def SortDictUniqueValue( Key, Value):           #有错误， 用Time做Key， 因dict的Key是唯一的， 很多其他user的time信息丢失
##    Dict=dict(zip(Key,Value))                #将Time和User 按原来的一一对应关系存入dict中这样对Time排序时，能保持User的对应关系
##    Dict=sorted(Dict.iteritems(),reverse=True)      #排序后为list对象
##    Dict=dict(Dict) 
##    
##    values=set()                        # 将dict中具有重复userId 的items 去除,每个user只保留最近一次的交互情况
##    for key in Dict.keys():
##        val=Dict[key]
##        if val in values:
##            del Dict[key]
##        else:
##            values.add(val)
##    return Dict

def DictReverse(DictOld):       #将dict中的 key，value对 转置
    DictNew={}
    for key,value in DictOld.iteritems():
        DictNew[value]=key
    return DictNew

def dict_to_list(Dict):         #dict 化为list 型
    List= []
    for key, value in Dict.iteritems():
        if (type(value) is dict):
            value = dict_to_list(value)
        List.append([key, value])
    print len(List)
    return List

def writerToFile(fileName,List):
    csv.register_dialect('mydialect',delimiter=']' )
    myFile=open(fileName,'wb')  
    myWriter=csv.writer(myFile)   
    myWriter.writerows(List)            
        
userInteractionLasttime()
     
        
        
    
