# -*- coding: cp936 -*-
import numpy
import csv
def CountofUserInteraction():
        buy='buy';cart='cart';collect='collect';click='click'
        userId=[]; behaviorType=[]; time=[]
        numColumn=len(open("D:\\tianchi_bigdata\\tianchi_mobile_recommend_train_user\\training_user_set.txt",'rb').readline().split('\t'))-1
        fr= open("D:\\tianchi_bigdata\\tianchi_mobile_recommend_train_user\\training_user_set.txt",'rb')     
        for line in fr.readlines():
           
            curLine=line.strip().split('\t')
            userId.append(str(curLine[0]))  
            behaviorType.append(str(curLine[2]))
            time.append(str(curLine[-1]))
     
        buyTime=[];buyUser=[]
        cartTime=[];cartUser=[]
        collectTime=[];collectUser=[]
        clickTime=[];clickUser=[]
        for i  in range(len(behaviorType)):
           if behaviorType[i]== '4':
                buyTime.append(time[i])
                buyUser.append(userId[i]) 
           elif behaviorType[i]== '3':
                cartTime.append(time[i])
                cartUser.append(userId[i])
           elif behaviorType[i]== '2':
                collectTime.append(time[i])
                collectUser.append(userId[i])
           else:
                clickTime.append(time[i])
                clickUser.append(userId[i])
        countOfUserInteraction(buyTime,buyUser,buy)
        countOfUserInteraction(cartTime,cartUser,cart)
        countOfUserInteraction(collectTime,collectUser,collect)
        countOfUserInteraction(clickTime,clickUser,click)
        
        

def countOfUserInteraction(listBehaviorTime,listUserId,behaviorType):
        dictOne={}; dictThree={};dictFive={};dictSeven={};dictFourteen={};dictThirty={}
        for i in range(len(listUserId)):
            dictThirty[listUserId[i]]=0
            dictFourteen[listUserId[i]]=0
            dictSeven[listUserId[i]]=0
            dictFive[listUserId[i]]=0
            dictThree[listUserId[i]]=0
            dictOne[listUserId[i]]=0
            
        for j in range(len(listBehaviorTime)):
            dictThirty[listUserId[j]]+=1
            if listBehaviorTime[j]>'2014-12-03' and listBehaviorTime[j]<'2014-12-18':
                dictFourteen[listUserId[j]]+=1
            if listBehaviorTime[j]>'2014-12-10' and listBehaviorTime[j]<'2014-12-18':
                dictSeven[listUserId[j]]+=1
            if listBehaviorTime[j]>'2014-12-12' and listBehaviorTime[j]<'2014-12-18':
                dictFive[listUserId[j]]+=1
            if listBehaviorTime[j]>'2014-12-14' and listBehaviorTime[j]<'2014-12-18':
                dictThree[listUserId[j]]+=1    
            if listBehaviorTime[j]>'2014-12-16' and listBehaviorTime[j]<'2014-12-18':
                dictOne[listUserId[j]]+=1

        listOne=dict_to_list(dictOne)
        writerToFile('D:\\tianchi_bigdata\\training_features\\User'+behaviorType+'InOneday.csv',listOne)

        listThree=dict_to_list(dictThree)
        writerToFile('D:\\tianchi_bigdata\\training_features\\User'+behaviorType+'InThreeday.csv',listThree)

        listFive=dict_to_list(dictFive)
        writerToFile('D:\\tianchi_bigdata\\training_features\\User'+behaviorType+'InFiveday.csv',listFive)
        
        listSeven=dict_to_list(dictSeven)
        writerToFile('D:\\tianchi_bigdata\\training_features\\User'+behaviorType+'InSevenday.csv',listSeven)

        listFourteen=dict_to_list(dictFourteen)
        writerToFile('D:\\tianchi_bigdata\\training_features\\User'+behaviorType+'InFourteenday.csv',listFourteen)

        listThirty=dict_to_list(dictThirty)
        writerToFile('D:\\tianchi_bigdata\\training_features\\User'+behaviorType+'InThirtyday.csv',listThirty)

        

def dict_to_list(Dict):         #dict 化为list 型
    List= []
    for key, value in Dict.iteritems():
        if (type(value) is dict):
            value = dict_to_list(value)
        List.append([key, value])
    return List


def writerToFile(fileName,List):
    csv.register_dialect('mydialect',delimiter=']' )
    myFile=open(fileName,'wb')  
    myWriter=csv.writer(myFile)    
    myWriter.writerows(List)
        
            
CountofUserInteraction()        
            
        
    
